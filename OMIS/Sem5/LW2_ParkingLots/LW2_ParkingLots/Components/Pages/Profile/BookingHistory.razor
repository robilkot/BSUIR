@page "/bookingHistory"
@rendermode InteractiveServer

@using System.Globalization
@using LW2_ParkingLots.Model.Entities
@using LW2_ParkingLots.Model.Services

<h2 style="text-align: center; margin-top: 20px;">История бронирования</h2>

<table style="width: 100%; border-collapse: collapse; margin: 20px auto; font-family: Arial, sans-serif; background-color: #f8f6fc; border-radius: 8px;">
    <thead style="background-color: #ece2ff; border-radius: 8px;">
        <tr>
            <th style="padding: 10px; text-align: left;">Адрес</th>
            <th style="padding: 10px; text-align: left;">Номер места</th>
            <th style="padding: 10px; text-align: left;">Цена</th>
            <th style="padding: 10px; text-align: left;">Время начала</th>
            <th style="padding: 10px; text-align: left;">Время окончания</th>
            <th style="padding: 10px; text-align: left;">Тип места</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in history)
        {
            <tr style="background-color: #f9f5fc; border-bottom: 1px solid #e0d8f5;">
                <td style="padding: 10px;">Where do I get address</td>
                <td style="padding: 10px;">@booking.Id</td>
                <td style="padding: 10px;">@booking.Cost</td>
                <td style="padding: 10px;">@booking.ArrivalTime.ToString("dd.MM.yyyy HH:mm", CultureInfo.InvariantCulture)</td>
                <td style="padding: 10px;">@booking.DepartureTime.ToString("dd.MM.yyyy HH:mm", CultureInfo.InvariantCulture)</td>
                <td style="padding: 10px;">@booking.Type</td>
            </tr>
        }
    </tbody>
</table>

<div style="text-align: center; margin-top: 20px;">
    <a style="padding: 10px 20px; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;" href="/profile">Профиль</a>
</div>


    @code {
    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Inject]
    private IParkingLotService Service { get; set; } = default!;

    private List<ParkingLot> history = [];

    protected override async Task OnInitializedAsync()
    {
        history = await Service.GetParkingLotWithFilterAsync(new(), 0);
    }
}